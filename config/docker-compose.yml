# Docker Compose para vo1d
# Inclui PostgreSQL, Redis e aplicação Node.js

version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: vo1d-postgres
    environment:
      POSTGRES_DB: vo1d
      POSTGRES_USER: vo1d
      POSTGRES_PASSWORD: vo1d123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - vo1d-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vo1d -d vo1d"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para mensagens efêmeras
  redis:
    image: redis:7-alpine
    container_name: vo1d-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vo1d-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicação Node.js
  app:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: vo1d-app
    environment:
      NODE_ENV: production
      PORT: 3000
      POSTGRES_URL: postgresql://vo1d:vo1d123@postgres:5432/vo1d
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      ENCRYPTION_KEY: your-super-secret-encryption-key-32-chars
      MESSAGE_TTL: 5
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - vo1d-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx para proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: vo1d-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - vo1d-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  vo1d-network:
    driver: bridge

